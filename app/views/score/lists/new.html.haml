= boxed_tab do |b|
  - @disciplines.each do |discipline|

    - b.name discipline.id do
      = discipline_image discipline
      = discipline.to_short
    - b.content discipline.id do
      = simple_form_for @score_list do |f|
        = f.error_notification
        = f.association :assessments, collection: Assessment.where(discipline: discipline), input_html: { class: "select-assessments" }
        = f.input :track_count
        = f.input :name, input_html: preset_value_for(:name, discipline.to_s).merge(data: { name: (@score_list.name || discipline.to_s) }, class: "input-name")
        = f.input :shortcut, input_html: preset_value_for(:shortcut, "Lauf 1").merge(maxlength: 8)
        .assessment-dependend
          = f.association :results, collection: Score::Result.discipline(discipline), input_html: { class: "select-results" }
          = f.input :generator, collection: Score::ListGenerator.for_discipline?(discipline), label_method: :to_label, selected: @score_list.generator.try(:to_param), input_html: { class: "select-list-generator" }
          = f.simple_fields_for :generator, (@score_list.generator || Score::ListGenerator.new) do |g|
            .generator-config{ data: { classes: form_generator_config_classes(:before_list) } }
              = g.input :before_list, collection: Score::List.all.map(&:decorate), input_html: { class: "select-before-list" }
            .generator-config{ data: { classes: form_generator_config_classes(:result) } }
              = g.input :result, collection: Score::Result.all.map(&:decorate), input_html: { class: "select-result" }
            .generator-config{ data: { classes: form_generator_config_classes(:best_count) } }
              = g.input :best_count, as: :integer
          = f.primary_button :submit, "Speichern"
 